"""
    10:30
    面向对象
        概述
            面向过程：关心解决问题的步骤(实现细节)
            面向对象：关心解决问题的人
        类和对象：
            类：类别，模板
            对象：个体，实例
            类和类区别：行为不同
            对象与对象：数据不同
            抽象：剔除个性的、非本质,抽离共性、本质特征的过程。
            语法：
            class 类名:
                def __init__(self,参数):
                    self.实例变量１=参数

                def 实例方法名(self,参数):
                    方法体

            变量　= 类名(参数)
            变量.实例成员


            class 类名:
                类变量１=参数
               　
                @classmethod
                def 类方法名(cls,参数):
                    方法体

            类名.类成员


    三大特征
        封装：
            数据：多个基础类型 --> 一个自定义类型（模板）
            行为：对外提供必要的功能，隐藏实现细节。
            设计：分而治之、变则疏之,高内聚、低耦合。　　　【分】
        继承：
            语法：重用先有类的功能，并在此基础上进行扩展。
                class 爸爸:
                    def __init__(self,爸爸的参数):
                        self.爸爸的实例变量 = 爸爸的参数

                    def 爸爸的实例方法(self):
                        pass

                class 儿子(爸爸):
                    def __init__(self,爸爸的参数,儿子的参数):
                        super().__init__(爸爸的参数)
                        self.儿子的实例变量 = 儿子的参数

                    def 儿子的实例方法(self):
                        pass

            设计：
                抽象变化、统一操作、隔离变化　　　　　　【隔】
                设计角度将：先有子再有父
                编码角度将：先有父再有子
        多态：父类的一种动作，在不同的子类上有不同的实现。【做】
        　　　价值：扩展性强、灵活度高
            class 客户端代码:　
                    def 实例方法(self,爸爸):
                        # 1. 调用父
                        爸爸.功能1()

            变量　= 客户端代码()
            # 2. 执行子
            变量.实例方法(儿子())

             class 爸爸:
                    def 功能1(self):
                        pass

            　class 儿子(爸爸):
            　　　　　# 3. 重写
                    def 功能1(self):
                        ....
    六个原则：
        开闭：增加新功能，不修改客户端代码。　　　　　　　　　　　　　【目标】
        单一：有且只有一个改变的原因。        　　　　　　　　　　　【一个变化点】
        依赖倒置：用爹不用子。　　　　　　　　　　　　　　　　　　　　【找抽象】
        组合复用：继承关系用在统一变化(交通工具->火车、汽车..)　　　【优先组合复用】
        　　　　　客户端代码与变化功能的关系是组合(人 --> 交通工具)
        里氏替换：看见爸爸，可以传递儿子；重写建议使用扩展重写。　　　【指导继承】
        迪米特：　在满足条件的基础上，传递数据越少越好。　　　　　　　【低耦合】

"""












